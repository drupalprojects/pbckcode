<?php

define('PBCKCODE_DEFAULT_MODES', array('html', 'css', 'php', 'javascript'));

/**
 * Implements hook_menu().
 */
function pbckcode_menu() {
  $items = array();

  $items['admin/config/content/pbckcode'] = array(
    'title' => 'Configure PBCKCode',
    'description' => 'Configure PBCKCode',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pbckcode_admin'),
    'access arguments' => array('configure pbckcode'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_ckeditor_plugin().
 */
function pbckcode_ckeditor_plugin() {
  return array(
    'pbckcode' => array(
      'name' => 'pbckcode',
      'desc' => t('PBCKCode plugin - Syntax Highlighting'),
      'path' => libraries_get_path('pbckcode').'/',
      'buttons' => array(
        'pbckcode' => array(
          'icon' => 'icons/pbckcode.png',
          'label' => 'Code',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_ckeditor_settings_alter().
 */
function pbckcode_ckeditor_settings_alter(&$settings) {
  $cls   = variable_get('pbckcode_class', '');
  $theme = variable_get('pbckcode_theme', '');
  $modes = variable_get('pbckcode_modes', PBCKCODE_DEFAULT_MODES);
  $highlighter = variable_get('pbckcode_highlight', '');

  $pbckcode = array();

  if ($cls !== '') {
    $pbckcode['cls'] = $cls;
  }
  if ($theme !== '') {
    $pbckcode['theme'] = $theme;
  }

  if ($highlighter !== '') {
    $pbckcode['highlighter'] = $highlighter;
  }

  $settings['pbckcode'] = $pbckcode;
}

/**
 * Page callback: PBCKCode Configuration
 *
 * @see  pbckcode_menu()
 */
function pbckcode_admin($form, &$form_state) {
  $form['pbckcode_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Class'),
    '#default_value' => variable_get('pbckcode_class', ''),
    '#description' => t('An optional class to your pre tag.'),
  );

   $form['pbckcode_theme'] = array(
    '#type' => 'select',
    '#title' => t('Theme'),
    '#options' => pbckcode_list_themes(),
    '#default_value' => variable_get('pbckcode_theme', ''),
    '#description' => t('The theme of the ACE Editor of the plugin.'),
  );

   $form['pbckcode_highlight'] = array(
    '#type' => 'select',
    '#title' => t('Syntax Highlighter'),
    '#options' => pbckcode_list_highlights(),
    '#default_value' => variable_get('pbckcode_highlight', ''),
  );

  $form['pbckcode_modes'] = array(
    '#type' => 'checkboxes',
    '#options' => pbckcode_list_modes(),
    '#title' => t('Which languages are available'),
    '#default_value' => variable_get('pbckcode_modes', PBCKCODE_DEFAULT_MODES),
  );

  return system_settings_form($form);
}

function pbckcode_list_modes() {
  // TODO: Add rest of modes
  $modes = array(
    'c_pp' => 'C/C++',
    'c9search' => 'C9Search',
    'clojure' => 'Clojure',
    'coffee' => 'CoffeeScript',
    'coldfusion' => 'ColdFusion',
    'csharp' => 'C#',
    'css' => 'CSS',
    'diff' => 'Diff',
    'glsl' => 'Glsl',
    'golang' => 'Go',
    'groovy' => 'Groovy',
    'haxe' => 'Haxe',
    'php' => 'PHP',
  );
  return $modes;
}

function pbckcode_list_themes() {
  $themes = array(
    '', '<None>',
    'Bright Themes' => array(
      'chrome' => 'Chrome',
      'clouds' => 'Clouds',
      'crimson_editor' => 'Crimson Editor',
      'dawn' => 'Dawn',
      'dreamweaver' => 'Dreamweaver',
      'eclipse' => 'Eclipse',
      'github' => 'GitHub',
      'solarized_light' => 'Solarized Light',
      'textmate' => 'Textmate',
      'tomorrow' => 'Tomorrow',
    ),
    'Dark Themes' => array(
      'clouds_midnight' => 'Clouds Midnight',
      'cobalt' => 'Cobalt',
      'idle_fingers' => 'Idle Fingers',
      'kr_theme' => 'KR Theme',
      'merbivore' => 'Merbivore',
      'merbivore_soft' => 'Merbivore Soft',
      'mono_industrial' => 'Mono Industrial',
      'monokai' => 'Monokai',
      'pastel_on_dark' => 'Pastel on Dark',
      'solarized_dark' => 'Solarized Dark',
      'tomorrow_night' => 'Tomorrow Night',
      'tomorrow_night_blue' => 'Tomorrow Night (Blue)',
      'tomorrow_night_bright' => 'Tomorrow Night (Bright)',
      'tomorrow_night_eighties' => 'Tomorrow Night (Eighties)',
      'twilight' => 'Twilight',
      'vibrant_ink' => 'Vibrant Ink',
    ),
  );

  return $themes;
}

function pbckcode_list_highlights() {
  // TODO: Name Highlights
  $highlights = array(
    '',
    'PRETTIFY' => 'Google Code Prettifier',
    'PRISM' => 'Prism',
    'HIGHLIGHT' => 'Highlight',
    'SYNTAX_HIGHLIGHTER' => 'Syntax Highlighter',
  );
  return $highlights;
}
